 const queries = [
            // Desabilitar checagem de chaves únicas e estrangeiras
            `SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;`,
            `SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;`,
            `SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';`,
    
            // Criar o schema
            `CREATE SCHEMA IF NOT EXISTS gestaolite DEFAULT CHARACTER SET utf8;`,
            `USE gestaolite;`,
    
            // Criar tabelas
            `CREATE TABLE IF NOT EXISTS grupo (
                grupo_id INT NOT NULL AUTO_INCREMENT,
                nome_grupo VARCHAR(150) NULL,
                PRIMARY KEY(grupo_id)
            ) ENGINE = InnoDB;`,
    
            `CREATE TABLE IF NOT EXISTS sub_grupo (
                sub_grupo_id INT NOT NULL AUTO_INCREMENT,
                nome_sub_grupo VARCHAR(150) NULL,
                PRIMARY KEY(sub_grupo_id)
            ) ENGINE = InnoDB;`,
    
            `CREATE TABLE IF NOT EXISTS tamanho_letras (
                tamanho_id INT NOT NULL AUTO_INCREMENT,
                tamanho VARCHAR(15) NULL,
                PRIMARY KEY(tamanho_id)
            ) ENGINE = InnoDB;`,
    
            `CREATE TABLE IF NOT EXISTS tamanho_numero (
                tamanho_id INT NOT NULL AUTO_INCREMENT,
                tamanho VARCHAR(15) NULL,
                PRIMARY KEY(tamanho_id)
            ) ENGINE = InnoDB;`,
    
            `CREATE TABLE IF NOT EXISTS unidade_massa (
                unidade_massa_id INT NOT NULL AUTO_INCREMENT,
                unidade_nome VARCHAR(45) NULL,
                PRIMARY KEY(unidade_massa_id)
            ) ENGINE = InnoDB;`,
    
            `CREATE TABLE IF NOT EXISTS medida_volume (
                medida_volume_id INT NOT NULL AUTO_INCREMENT,
                medida_nome VARCHAR(45) NULL,
                PRIMARY KEY(medida_volume_id)
            ) ENGINE = InnoDB;`,
    
            `CREATE TABLE IF NOT EXISTS unidade_comprimento (
                unidade_comprimento_id INT NOT NULL AUTO_INCREMENT,
                unidade_nome VARCHAR(100) NULL,
                PRIMARY KEY(unidade_comprimento_id)
            ) ENGINE = InnoDB;`,
    
            `CREATE TABLE IF NOT EXISTS unidade_estoque (
                unidade_estoque_id INT NOT NULL AUTO_INCREMENT,
                estoque_nome VARCHAR(45) NULL,
                PRIMARY KEY(unidade_estoque_id)
            ) ENGINE = InnoDB;`,
    
            `CREATE TABLE IF NOT EXISTS fornecedor (
                fornecedor_id INT NOT NULL AUTO_INCREMENT,
                cnpj VARCHAR(18) NULL,
                inscricao_estadual VARCHAR(14) NULL,
                razao_social VARCHAR(200) NULL,
                nome_fantasia VARCHAR(200) NULL,
                cep VARCHAR(9) NULL,
                cidade VARCHAR(150) NULL,
                bairro VARCHAR(150) NULL,
                uf VARCHAR(2) NULL,
                endereco VARCHAR(255) NULL,
                telefone VARCHAR(15) NULL,
                email VARCHAR(150) NULL,
                PRIMARY KEY(fornecedor_id)
            ) ENGINE = InnoDB;`,
    
            `CREATE TABLE IF NOT EXISTS cor_produto (
                cor_produto_id INT NOT NULL AUTO_INCREMENT,
                nome_cor_produto VARCHAR(150) NULL,
                PRIMARY KEY(cor_produto_id)
            ) ENGINE = InnoDB;`,
    
            `CREATE TABLE IF NOT EXISTS venda (
                venda_id INT NOT NULL AUTO_INCREMENT,
                data_venda VARCHAR(10) NOT NULL,
                cliente_id INT NULL,
                total_liquido DECIMAL(10,2) NOT NULL,
                numero_pedido VARCHAR(50) NOT NULL,
                PRIMARY KEY (venda_id)
            ) ENGINE = InnoDB;`,
    
            `CREATE TABLE IF NOT EXISTS forma_pagamento (
                pagamento_id INT NOT NULL AUTO_INCREMENT,
                venda_id INT NOT NULL,
                tipo_pagamento VARCHAR(50) NOT NULL,
                valor DECIMAL(10,2) NOT NULL,
                PRIMARY KEY (pagamento_id),
                FOREIGN KEY (venda_id) REFERENCES venda(venda_id)
            ) ENGINE = InnoDB;`,
    
            `CREATE TABLE IF NOT EXISTS item_venda (
                item_venda_id INT NOT NULL AUTO_INCREMENT,
                venda_id INT NOT NULL,
                produto_id INT NOT NULL,
                preco DECIMAL(10,2) NOT NULL,
                quantidade INT NOT NULL,
                unidade_estoque_id INT NOT NULL,
                PRIMARY KEY (item_venda_id)
            ) ENGINE = InnoDB;`,
    
            `CREATE TABLE IF NOT EXISTS produto (
                produto_id INT NOT NULL AUTO_INCREMENT,
                nome_produto VARCHAR(200) NULL,
                PRIMARY KEY(produto_id)
            ) ENGINE = InnoDB;`,
    
            // Reativar verificações de chaves únicas e estrangeiras
            `SET SQL_MODE=@OLD_SQL_MODE;`,
            `SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;`,
            `SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;`
        ];